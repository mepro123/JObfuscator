<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JObfuscator - Advanced Luau Obfuscator</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-lua.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.14/codemirror.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.14/codemirror.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.14/mode/lua/lua.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.14/addon/hint/show-hint.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.65.14/addon/hint/lua-hint.min.js"></script>
    <style> 
        body {
            font-family: Arial, sans-serif;
            background-color: #1e1e2e;
            color: #ffffff;
            text-align: center;
            padding: 20px;
        }
        .container {
            max-width: 800px;
            margin: auto;
            background: #2e2e3e;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(255, 255, 255, 0.1);
        }
        .CodeMirror {
            border: 1px solid #555;
            border-radius: 10px;
            background: #282c34 !important;
            color: #f8f8f2 !important;
            font-size: 14px;
        }
        .CodeMirror-gutters {
            background: #282c34 !important;
            border-right: 1px solid #555;
        }
        .CodeMirror-linenumber {
            color: #5c6370 !important;
        }
        .CodeMirror-cursor {
            border-left: 2px solid #ffffff !important;
        }
        .CodeMirror pre {
            background: none !important;
            color: inherit !important;
        }
        .cm-keyword { color: #c678dd !important; }
        .cm-string { color: #98c379 !important; }
        .cm-comment { color: #5c6370 !important; }
        .cm-number { color: #d19a66 !important; }
        .cm-variable { color: #ffffff !important; }
        button {
            background: #6200ea;
            color: white;
            border: none;
            padding: 10px 15px;
            margin: 10px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: transform 0.2s ease-in-out;
        }
        button {
    width: 100px;
    height: 40px;
    transition: width 0.05s ease-in-out, height 0.05s ease-in-out;
}

button:hover {
    width: 113px;
    height: 55px;
}
button:active {
	width: 100px;
    height: 40px;
}

       

        pre {
            background: #282c34;
            padding: 10px;
            border-radius: 5px;
            text-align: left;
            white-space: pre-wrap;
            word-wrap: break-word;
        }
        #copyMessage {
            color: #4caf50;
            display: none;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>JObfuscator - Advanced Luau Obfuscator</h2>
        <textarea id="luauCode"></textarea>
        <br>
        <button onclick="obfuscateCode()">Obfuscate</button>
        <button onclick="copyToClipboard()">Copy</button>
        <h3>Obfuscated Output:</h3>
        <pre><code id="output" class="language-lua"></code></pre>
        <p id="copyMessage">Copied!</p>
    </div>
    <script>
        var editor = CodeMirror.fromTextArea(document.getElementById("luauCode"), {
            mode: "lua",
            theme: "tomorrow-night-bright",
            lineNumbers: true,
            extraKeys: { "Ctrl-Space": "autocomplete" }
        });
        
        function obfuscateCode() {
    let code = editor.getValue().trim();
    if (!code) {
        alert("Enter some Luau code first!");
        return;
    }

    let varMap = {};
    let obfuscated = code.replace(/local\s+([a-zA-Z_]\w*)/g, (_, v) => {
        let randVar = "_" + Math.random().toString(36).substr(2, 12).replace(/[0-9]/g, '');
        varMap[v] = randVar;
        return `local ${randVar}`;
    });

    for (let original in varMap) {
        let newVar = varMap[original];
        let regex = new RegExp(`\\b${original}\\b`, "g");
        obfuscated = obfuscated.replace(regex, newVar);
    }

    // Advanced ASCII Obfuscation with Math Expressions
    function asciiObfuscate(str) {
        return str.split('').map(c => {
            let ascii = c.charCodeAt(0);
            let terms = [];
            let remaining = ascii;
            while (remaining > 0) {
                let part = Math.floor(Math.random() * remaining) + 1;
                terms.push(part);
                remaining -= part;
            }
            return `string.char(${terms.join('+')})`;
        }).join('..');
    }

    obfuscated = obfuscated.replace(/(["'])(.*?)\1/g, (_, q, str) => {
        return asciiObfuscate(str);
    });

    // Fake Execution Flow to Confuse Deobfuscators
    let fakeVar = "_" + Math.random().toString(36).substr(2, 10);
    let fakeLoop = "_" + Math.random().toString(36).substr(2, 10);
    let junkCode = `local ${fakeVar} = 0; for i=1,math.random(10,50) do ${fakeVar} = ${fakeVar} + i end;`;

                  obfuscated = `
             ${junkCode}
             local ${fakeLoop} = 0
            while ${fakeLoop} < 1 do 
            ${fakeLoop} = ${fakeLoop} + 1
             ${obfuscated}
            end
            `;

           let watermark = `-- Obfuscated By JObfuscator V2.1 [https://sites.google.com/view/jobfuscate/]\n`;
          obfuscated = watermark + obfuscated;

          document.getElementById("output").textContent = obfuscated;
          Prism.highlightElement(document.getElementById("output"));
      }

        
        function copyToClipboard() {
            let output = document.getElementById("output").textContent;
            if (!output) return;
            let tempTextArea = document.createElement("textarea");
            tempTextArea.value = output;
            document.body.appendChild(tempTextArea);
            tempTextArea.select();
            document.execCommand("copy");
            document.body.removeChild(tempTextArea);
            let message = document.getElementById("copyMessage");
            message.style.display = "block";
            setTimeout(() => message.style.display = "none", 2000);
        }
    </script>
</body>
</html>
