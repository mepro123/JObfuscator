<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>JObfuscator - Advanced Luau Obfuscator</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-lua.min.js"></script>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        textarea { width: 100%; height: 150px; font-size: 14px; }
        button { padding: 10px; font-size: 16px; cursor: pointer; margin-top: 10px; }
        pre { background: #f4f4f4; padding: 10px; white-space: pre-wrap; word-wrap: break-word; }
        code { display: block; padding: 10px; }
    </style>
</head>
<body>

    <h2>JObfuscator - Advanced Luau Obfuscator</h2>
    <textarea id="luauCode" placeholder="print('Hello World!')"></textarea>
    <br>
    <button onclick="obfuscateCode()">Obfuscate</button>
    <button onclick="copyToClipboard()">Copy</button>
    <h3>Obfuscated Output:</h3>
    <pre><code id="output" class="language-lua"></code></pre>
    <p id="copyMessage" style="color: green; display: none;">Copied!</p>

    <script>
        function obfuscateCode() {
            let code = document.getElementById("luauCode").value.trim();
            if (!code) {
                alert("Enter some Luau code first!");
                return;
            }

            let varMap = {}; 
            let counter = 0;

            // Variable renaming
            let obfuscated = code.replace(/local\s+([a-zA-Z_]\w*)/g, (_, v) => {
                let randVar = "_" + Math.random().toString(36).substr(2, 8);
                varMap[v] = randVar;
                return `local ${randVar}`;
            });

            // Replace all references to variables
            for (let original in varMap) {
                let newVar = varMap[original];
                let regex = new RegExp(`\\b${original}\\b`, "g");
                obfuscated = obfuscated.replace(regex, newVar);
            }

            // Obfuscate numbers with randomized expressions
            obfuscated = obfuscated.replace(/\b(\d+)\b/g, (_, n) => {
                let random1 = Math.floor(Math.random() * 10) + 1;
                let random2 = Math.floor(Math.random() * 10) + 1;
                return `(${n} + ${random1} - ${random1} + ${random2} - ${random2})`;
            });

            // Obfuscate strings using string.char()
            obfuscated = obfuscated.replace(/(["'])(.*?)\1/g, (_, q, str) => {
                let encoded = str.split('').map(c => `string.char(${c.charCodeAt(0)})`).join('..');
                return `(${encoded})`;
            });

            // Introduce control flow confusion (dummy loops)
            let fakeLoopVar = "_L" + Math.random().toString(36).substr(2, 6);
            obfuscated = `local ${fakeLoopVar} = 0; while ${fakeLoopVar} < 1 do ${fakeLoopVar} = ${fakeLoopVar} + 1; ${obfuscated} end`;

            // Watermark
            let watermark = `-- Obfuscated By JObfuscator V1.0.4 [https://sites.google.com/view/jobfuscate/]
`;
            obfuscated = watermark + obfuscated;

            document.getElementById("output").textContent = obfuscated;
            Prism.highlightElement(document.getElementById("output"));
        }

        function copyToClipboard() {
            let output = document.getElementById("output").textContent;
            if (!output) return;

            let tempTextArea = document.createElement("textarea");
            tempTextArea.value = output;
            document.body.appendChild(tempTextArea);
            tempTextArea.select();
            document.execCommand("copy");
            document.body.removeChild(tempTextArea);
            
            let message = document.getElementById("copyMessage");
            message.style.display = "block";
            setTimeout(() => message.style.display = "none", 2000);
        }
    </script>

</body>
</html>
